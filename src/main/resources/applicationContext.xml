<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"   
		xmlns:util="http://www.springframework.org/schema/util" 
		xmlns:aop="http://www.springframework.org/schema/aop"  
		xmlns:mvc="http://www.springframework.org/schema/mvc"        
    	xsi:schemaLocation="http://www.springframework.org/schema/beans        
    						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd        
    						http://www.springframework.org/schema/context        
   							http://www.springframework.org/schema/context/spring-context-4.0.xsd
   							http://www.springframework.org/schema/tx    
          					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
     						http://www.springframework.org/schema/aop 
     						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
   							http://www.springframework.org/schema/mvc  
						    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"> 
		<!-- 默认的注解映射的支持 -->  
		<context:component-scan base-package="com.core;com.account" />
    	
    	<!-- 针对 Responsebody 转码 -->
    	<mvc:annotation-driven>
			<mvc:message-converters register-defaults="true">
				<bean class="com.core.util.UTF8StringHttpMessageConverter" />
			</mvc:message-converters>
		</mvc:annotation-driven> 
		
		<!-- 引入配置文件 -->  
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<value>classpath:/jdbc.properties</value> 
				</list>
			</property>
		</bean>
		
	    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		    <property name="driverClass" value="${datasource.driverClassName}" />
		    <property name="jdbcUrl" value="${datasource.url}" />
		    <property name="user" value="${datasource.username}" />
		    <property name="password" value="${datasource.password}" />
		    <property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		    <property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		    <property name="minPoolSize" value="${c3p0.minPoolSize}" />
		    <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		    <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		    <property name="maxStatements" value="${c3p0.maxStatements}" />
		    <property name="maxIdleTimeExcessConnections" value="${c3p0.maxIdleTimeExcessConnections}"/>
	    </bean>
	    
	    <!-- spring和MyBatis整合-->  
	    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		    <property name="configLocation" value="classpath:mybatis-config.xml" />  
		    <property name="dataSource" ref="dataSource" />
		    <!-- 自动扫描mapping.xml文件 --> 
		    <property name="mapperLocations" value="classpath:com/**/DAO/*Mapper.xml"/>
		</bean>
		
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
		  <constructor-arg index="0" ref="sqlSessionFactory" />  
		</bean>
		
		<!-- DAO接口所在包名，Spring会自动查找其下的类 --> 
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.**.DAO" />
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		</bean>
		
		<!-- 配置事务管理器 -->
		<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>
		
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="get*" read-only="true" />
                <tx:method name="find*" read-only="true" />
                <tx:method name="load*" read-only="true" />
                <tx:method name="query*" read-only="true" />
                <tx:method name="add*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="save*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="insert*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="update*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="modify*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="delete*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="del*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="registe*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="approve*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="clear*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="set*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="reset*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <tx:method name="getUpdate*" read-only="false" rollback-for="Exception" propagation="REQUIRED"/>
                <!-- <tx:method name="*" read-only="true"/> -->
			</tx:attributes>
		</tx:advice>
		
		<aop:config >
			<aop:pointcut expression="execution (* com.*.service..*Impl.*(..))" id="services" />
			<aop:advisor advice-ref="txAdvice" pointcut-ref="services" />
		</aop:config>
	    
	    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
        

</beans>